name: MSBuild

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: Install VCPKG Dependencies
      id: runvcpkg
      uses: lukka/run-vcpkg@v10.2
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        runVcpkgInstall: true
        
    - name: Integrate VCPKG
      run: .\${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}/vcpkg.exe integrate install
      
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Zip Binaries
      uses: montudor/action-zip@v1.0.0
      with:
        args: zip -qq -r PlatformDataEngine_CIBuild_Win64.zip ${{env.SOLUTION_FILE_PATH}}/x64/${{env.BUILD_CONFIGURATION}}
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        name: PlatformDataEngine_CIBuild_Win64
        path: PlatformDataEngine_CIBuild_Win64.zip
        
